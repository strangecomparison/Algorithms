package alishev;

//реализация жадного алгоритма - сколько минимум раз нужно заправиться машине,
// чтобы преодолеть нужное расстояние

public class Task2 {
    public static void main(String[] args) {

        int[] stops = {0, 200, 375, 550, 750, 950};
        System.out.println(minStops(stops, 400));
    }

    // stops - заправки, число обозначает, сколько до них километров от начала пути
    // capacity  - на сколько километров хватит полного бака машины
    private static int minStops(int[] stops, int capacity) {
        int result = 0;              // оптимальное количество остановок
        int currentStop = 0;        // обозначает остановку, на которой машина находится в данный момент

        // стоя на текущей точке, нам нужно вычислить самую дальню заправку, до которой мы можем доехать
        // проверяется условие, не заехали ли мы уже дальше, чем надо
        while(currentStop < stops.length - 1) {
            int nextStop = currentStop;

            // первое условие проверяет, не находится ли следующая уже дальше точки, куда надо добравться
            // второе условие проверяет, можем ли мы доехать до следующей заправки

            while(nextStop < stops.length - 1 &&
                    stops[nextStop + 1] - stops[currentStop] <= capacity) {
                nextStop++;      // индекс наиболее дальшней достижимой заправки от текущей заправки
            }                   // обновляется, и мы выходим из цикла

            // если индекс наиболее дальней заправки не изменился, то
            if(currentStop == nextStop)
                return -1;

            // если мы еще не достигли конца пути
            if(nextStop < stops.length - 1)
                result++;      // инкрементируем значение оптимального количества остановок

            currentStop = nextStop; // перемещаемся на следующую заправку

        }

        return result;

    }

}
